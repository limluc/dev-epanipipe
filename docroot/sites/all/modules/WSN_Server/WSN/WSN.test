<?php
/**
 * @file
 * Tests for the WSN module
 */
class WSNTestCase extends DrupalWebTestCase {
  /**
   * Returns meta data for WSN Managment tests.
   */
  public static function getInfo() {
    return array(
      'name' => 'WSN functionality',
      'description' => 'Test the functionality of the WSN base module',
      'group' => 'WSN',
    );
  }

  /**
   * Standard set up for all tests.
   */
  public function setUp() {
    parent::setUp('WSN');
  }

  /**
   * Tests access to WSN pages.
   */
  public function testWSNAccess() {
    $this->drupalGet('WSN');
    $this->assertResponse(403, t('Make sure access is denied to WSN dashboard for anonymous user'));

    $basic_user = $this->drupalCreateUser();
    $this->drupalLogin($basic_user);
    $this->drupalGet('WSN');
    $this->assertResponse(403, t('Make sure access is denied to WSN dashboard for basic user'));

    $privileged_user = $this->drupalCreateUser(array('WSN: access dashboard'));
    $this->drupalLogin($privileged_user);
    $this->drupalGet('WSN');
    $this->assertText(t('WSN Dashboard'), t('Make sure the correct page has been displayed by checking that the title is "WSN Dashboard".'));
  }

  /**
   * Tests access to WSN settings pages.
   */
  public function testWSNAccessSettings() {
    $this->drupalGet('admin/config/WSN');
    $this->assertResponse(403, t('Make sure access is denied to WSN settings page for anonymous user'));
    $this->drupalGet('admin/config/WSN/WSN');
    $this->assertResponse(403, t('Make sure access is denied to WSN settings page for anonymous user'));

    $basic_user = $this->drupalCreateUser();
    $this->drupalLogin($basic_user);
    $this->drupalGet('admin/config/WSN');
    $this->assertResponse(403, t('Make sure access is denied to WSN settings page for basic user'));
    $this->drupalGet('admin/config/WSN/WSN');
    $this->assertResponse(403, t('Make sure access is denied to WSN settings page for basic user'));

    $privileged_user = $this->drupalCreateUser(array('WSN: access administration pages'));
    $this->drupalLogin($privileged_user);
    $this->drupalGet('admin/config/WSN');
    $this->assertText(t('WSN'), t('Make sure the correct page has been displayed by checking that the title of the settings page is "WSN".'));
    $this->drupalGet('admin/config/WSN/WSN');
    $this->assertText(t('WSN'), t('Make sure the correct page has been displayed by checking that the title of the settings page is "WSN".'));
  }

  /**
   * Tests access to WSN attributes pages.
   */
  public function testWSNAttributesAccess() {
    $this->drupalGet('WSN/attributes');
    $this->assertResponse(403, t('Make sure access is denied to WSN Attributes list for anonymous user'));
    $this->drupalGet('WSN/attributes/add');
    $this->assertResponse(403, t('Make sure access is denied to WSN Attributes form for anonymous user'));

    $basic_user = $this->drupalCreateUser();
    $this->drupalLogin($basic_user);
    $this->drupalGet('WSN/attributes');
    $this->assertResponse(403, t('Make sure access is denied to WSN Attributes list for basic user'));
    $this->drupalGet('WSN/attributes/add');
    $this->assertResponse(403, t('Make sure access is denied to WSN Attributes form for basic user'));

    $privileged_user = $this->drupalCreateUser(array('WSN: access administration pages'));
    $this->drupalLogin($privileged_user);
    $this->drupalGet('WSN/attributes');
    $this->assertText(t('Attributes'), t('Make sure the correct page has been displayed by checking that the title is "Attributes".'));
    $this->drupalGet('WSN/attributes/add');
    $this->assertText(t('Add a new attribute'), t('Make sure the correct page has been displayed by checking that the title is "Add a new attribute".'));
  }
}
