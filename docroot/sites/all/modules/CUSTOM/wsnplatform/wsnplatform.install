<?php
/**
 * @file
 * Install, update and uninstall functions for the Wireless Sensor Network (WSN) Platform module.
 */

/**
 * Implement hook_install().
 *
 */
function wsnplatform_install() {
    //TO BE DETERMINED
    //TEST ITEMS
    variable_set('wsnplatform_comms_wait_new_text', 86400);
}

/**
 * Implement hook_uninstall().
 *
 */
function wsnplatform_uninstall() {
    //TO BE DETERMINED
}

/**
 * Implement hook_schema().
 *
 * @return
 *   Drupal schema array
 */
function wsnplatform_schema() {
    $schema['wsnplatform_attribute'] = array(
      'description' => 'Attribute List for Dropdown List - METHOD',
      'fields' => array(
        'attribute_nid' => array(
          'description' => 'Attribute NID',
          'type' => 'serial',
          'not null' => TRUE,
        ),
        'domain' => array(
          'description' => 'List Domain',
          'type' => 'varchar',
          'length' => '50',
          'not null' => TRUE,
        ),
        'akey' => array(
          'description' => 'List Key',
          'type' => 'varchar',
          'length' => '50',
          'not null' => FALSE,
        ),
        'avalue' => array(
          'description' => 'List Value',
          'type' => 'varchar',
          'length' => '100',
          'not null' => FALSE,
        ),
        'isactive' => array(
          'description' => 'Active Set',
          'type' => 'int',
          'size' => 'tiny',
          'not null' => FALSE,
          'default' => 1,
        ),
      ),
      'primary key' => array('attribute_nid'),
      'indexes' => array(
        'domain' => array('domain'),
      ),
    );
    
    $schema['wsnplatform_datacompression'] = array(
      'description' => 'TODO: please describe this table!',
      'fields' => array(
        'datacompression_id' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'serial',
          'not null' => TRUE,
        ),
        'datacompression_title' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '50',
          'not null' => TRUE,
        ),
        'sensor_sensor_delimiter' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '10',
          'not null' => FALSE,
        ),
        'measurand_set_delimiter' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '10',
          'not null' => FALSE,
        ),
        'details' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'text',
          'not null' => FALSE,
        ),
      ),
      'primary key' => array('datacompression_id'), 
      'unique keys' => array(
        'datacompression_id' => array('datacompression_id')
      ),
    );
    $schema['wsnplatform_notification'] = array(
      'description' => 'TODO: please describe this table!',
      'fields' => array(
        'notification_id' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'serial',
          'unsigned' => TRUE,
          'size' => 'big',
          'not null' => TRUE,
        ),
        'notification_message' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'text',
          'not null' => TRUE,
        ),
        'notification_receiver' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '100',
          'not null' => TRUE,
        ),
        'notification_condition' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'text',
          'not null' => TRUE,
        ),
      ),
      'primary key' => array('notification_id'),
      'unique keys' => array(
        'notification_id' => array('notification_id')
      ),
    );
    $schema['wsnplatform_plant'] = array(
      'description' => 'TODO: please describe this table!',
      'fields' => array(
        'plant_id' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'serial',
          'not null' => TRUE,
        ),
        'plant_type' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '50',
          'not null' => FALSE,
        ),
        'plant_startcycle' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'int',
          'not null' => FALSE,
        ),
        'plant_growthstage' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '50',
          'not null' => FALSE,
        ),
      ),
      'primary key' => array('plant_id'),
      'unique keys' => array(
        'plant_id' => array('plant_id')
      ),
    );
    $schema['wsnplatform_group'] = array(
      'description' => 'WSN Platform - Mote Group',
      'fields' => array(
        'group_nid' => array(
          'description' => 'Mote Group ID',
          'type' => 'serial',
          'not null' => TRUE,
        ),
        'group_title' => array(
          'description' => 'Mote Group Title',
          'type' => 'varchar',
          'length' => '100',
          'not null' => TRUE,
        ),
        'contact_name' => array(
          'description' => 'Mote Group Contact Name',
          'type' => 'varchar',
          'length' => '100',
          'not null' => FALSE,
        ),
        'contact_email_address' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'text',
          'not null' => FALSE,
        ),
        'contact_number' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '100',
          'not null' => FALSE,
        ),
        'contact_address' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'text',
          'not null' => FALSE,
        ),
        'contact_language' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '100',
          'not null' => FALSE,
        ),
        'contact_details' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'text',
          'not null' => FALSE,
        ),
      ),
      'primary key' => array('group_nid'),
      'indexes' => array(
        'domain' => array('group_title'),
      ),
    );
    $schema['wsnplatform_nodeentity'] = array(
      'description' => 'WSN Platform Schema for MoteUnit',
      'fields' => array(
        'nodeentity_nid' => array(
          'description' => 'MoteUnit ID ',
          'type' => 'serial',
          'not null' => TRUE,
        ),
        'nodeentity_title' => array(
          'description' => 'MoteUnit Title',
          'type' => 'varchar',
          'length' => '100',
          'not null' => TRUE,
        ),
        'group_nid' => array(
          'description' => 'MoteGroup ID',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'input_id' => array(
          'description' => 'Input ID',
          'type' => 'varchar',
          'length' => '50',
          'not null' => FALSE,
        ),
        'reading_occurence' => array(
          'description' => 'How Many Set of Reading Per Message',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'sensor_number' => array(
          'description' => 'Number of Sensor in a Mode',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'datacompression_id' => array(
          'description' => 'Data Compression Technique Used',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'freq_read' => array(
          'description' => 'Frequency of Reading',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'freq_trans' => array(
          'description' => 'Frequency of Transmission',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'site_location' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'text',
          'not null' => FALSE,
        ),
        'node_elevation' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'int',
          'not null' => FALSE,
        ),
        'node_activity' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '20',
          'not null' => FALSE,
        ),
        'notification_id' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'int',
          'not null' => FALSE,
        ),
        'last_measured' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'int',
          'not null' => FALSE,
        ),
        'last_text' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'int',
          'not null' => FALSE,
        ),
        'plant_id' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'int',
          'not null' => FALSE,
        ),
        'input_method' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'varchar',
          'length' => '50',
          'not null' => FALSE,
        ),
      ),
      'primary key' => array('nodeentity_nid'),
      'unique keys' => array(
        'input_id' => array('input_id')
      ),
      'indexes' => array(
        'moteunit_title' => array('nodeentity_title'),
        'wsn_hierarchy' => array('group_nid', 'nodeentity_nid'),
      ),
    );
    $schema['wsnplatform_sensor_model'] = array(
      'description' => 'Sensor Model Schema for WSN Platform',
      'fields' => array(
        'model_nid' => array(
          'description' => 'Model NID',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'model_title' => array(
          'description' => 'Model Title',
          'type' => 'varchar',
          'length' => '100',
          'not null' => TRUE,
        ),
        'scalefactor' => array(
          'description' => 'Scale Factor',
          'type' => 'int',
          'not null' => FALSE,
          'default' => 1,
        ),
        'unit' => array(
          'description' => 'Unit of Measurement',
          'type' => 'varchar',
          'length' => '100',
          'not null' => FALSE,
        ),
        'callibration_a0' => array(
          'description' => 'Callibration Polynomial 0',
          'type' => 'float',
          'not null' => TRUE,
          'default' => 0,
        ),
        'callibration_a1' => array(
          'description' => 'Callibration Polynomial 1',
          'type' => 'float',
          'not null' => TRUE,
          'default' => 1,
        ),
        'callibration_a2' => array(
          'description' => 'Callibration Polynomial 2',
          'type' => 'float',
          'not null' => TRUE,
          'default' => 0,
        ),
        'operating_max' => array(
          'description' => 'Sensor Observation Max Value',
          'type' => 'float',
          'not null' => FALSE,
        ),
        'operating_min' => array(
          'description' => 'Sensor Observation Min Value',
          'type' => 'float',
          'not null' => FALSE,
        ),
        'datasheet' => array(
          'description' => 'Datasheet Link for further details',
          'type' => 'text',
          'not null' => FALSE,
        ),
      ),
      'primary key' => array('model_nid'),
      'indexes' => array(
        'model_title' => array('model_title'),
      ),
    );
    $schema['wsnplatform_sensor'] = array(
      'description' => 'Sensor Schema for WSN Platform',
      'fields' => array(
        'sensor_nid' => array(
          'description' => 'Sensor ID',
          'type' => 'serial',
          'not null' => TRUE,
        ),
        'sensor_title' => array(
          'description' => 'Sensor Title',
          'type' => 'varchar',
          'length' => '100',
          'not null' => TRUE,
        ),
        'nodeentity_nid' => array(
          'description' => 'Mote Unit This Sensor Belong To',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'model_nid' => array(
          'description' => 'This Sensor Model',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'low_threshold' => array(
          'description' => 'Low Threshold Criteria',
          'type' => 'int',
          'not null' => FALSE,
        ),
        'high_threshold' => array(
          'description' => 'High Threshold Criteria',
          'type' => 'int',
          'not null' => FALSE,
        ),
        'order_number' => array(
          'description' => 'Order of Sensor in the Mote Unit',
          'type' => 'int',
          'not null' => TRUE,
        ),
        'notification_id' => array(
          'description' => 'TODO: please describe this field!',
          'type' => 'int',
          'not null' => FALSE,
        ),
      ),
      'primary key' => array('sensor_nid'),
      'indexes' => array(
        'model_nid' => array('model_nid'),
        'order_number' => array('nodeentity_nid', 'order_number'),
        'sensor_title' => array('sensor_title'),
        'wsn_hierarchy' => array('sensor_nid', 'nodeentity_nid'),
      ),
    );
   $schema['wsnplatform_observation'] = array(
    'description' => 'Table schema to store measured value',
    'fields' => array(
      'observation_nid' => array(
        'description' => 'Observation ID',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nodeentity_nid' => array(
        'description' => 'Mote ID sensor',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'observation_type' => array(
        'description' => 'Observation Type Measurement.',
        'type' => 'varchar',
        'length' => '10',
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'Time of Observation measured',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'value_array' => array(
        'description' => 'Measured Value Array',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'sensor_one' => array(
        'description' => 'Measured value for Sensor 1',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_two' => array(
        'description' => 'Measured value for Sensor 2',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_three' => array(
        'description' => 'Measured value for Sensor 3',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_four' => array(
        'description' => 'Measured value for Sensor 4',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_five' => array(
        'description' => 'Measured value for Sensor 5',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_six' => array(
        'description' => 'Measured value for Sensor 6',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_seven' => array(
        'description' => 'Measured value for Sensor 7',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_eight' => array(
        'description' => 'Measured value for Sensor 8',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_nine' => array(
        'description' => 'Measured value for Sensor 9',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'sensor_ten' => array(
        'description' => 'Measured value for Sensor 10',
        'type' => 'float',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('observation_nid'),
    'indexes' => array(
      'observation_type' => array('nodeentity_nid','timestamp', 'observation_type'),
    ),
  );
  return $schema;
}

